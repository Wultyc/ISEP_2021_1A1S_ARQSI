# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: atlassian/default-image:2

pipelines:
  custom:
    deployment-to-cloud:
      - step:
          name: 'Test RedeMasterData'
          script:
            - cd RedeMasterData
            #- npm install
            - echo "Tests ignored"
      - step:
          name: Build Image and Save on DockerHub
          script:
            - export IMAGE_NAME=$DOCKER_HUB_USERNAME/viajantes2-redemasterdata:latest
            # build the Docker image (this will use the Dockerfile in the root of the repo)
            - docker build -t $IMAGE_NAME ./RedeMasterData
            # authenticate with the Docker Hub registry
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            # push the new Docker image to the Docker registry
            - docker push $IMAGE_NAME
          services:
            - docker
      - step:
          name: Deploy to Kubernets
          deployment: production
          script:
            - echo "$KUBECONFIG"
            - echo $KUBECONFIG | base64 -d > kubeconfig.yml
            # Remove anything at the path $(pwd)/config to avoid naming
            # conflicts with the pipe. Ideally the pipe would allow the kube
            # config path to be configured to circumvent this.
            # Removing the folder isn't an issue since it's applying the
            # pushed image that was created in the previous step.
            - rm -rf config
            # Execute the pipe as normal.
            - pipe: atlassian/kubectl-run:1.1.2
              variables:
                KUBE_CONFIG: 'kubeconfig.yml'
                KUBECTL_COMMAND: 'apply'
                RESOURCE_PATH: './Kubernets/redemasterdata_deployment.yaml'
